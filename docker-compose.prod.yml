# Çalıştırmadan önce yapılması gereken adımlar:
# 1- client(app) içinde bulunan nginx.conf klasöründen gerekli yönlendirmeleri yapma.
# 2- kullanılan başka imageler varsa belirtme.
# !! React projesi için birşey yapılmasını gerek yoktur build edilip direk olarak nginx içinde çalışmaktadır.

# docker-compose -f "docker-compose.prod.yml" build

version: "3.8"

services:
  db-app:
    image: postgres
    restart: always
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks: 
      - mynetwork
    ports:
      - 5432:5432
    volumes:
      - ./postgre/postgres-data:/var/lib/postgresql/data
      - ./postgre/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
  server-app:
    restart: always
    build:
      context: ./server
      target: server-production
    container_name: server-prod
    image: server-prod
    volumes:
      - ./server/src:/app/server/src
      - ./server/.env:/app/server/.env
    ports:
      - 8000:8000
    networks: 
      - mynetwork
    depends_on:
      - db-app
  nginx:
    restart: always
    container_name: nginx
    image: nginx
    build:
      context: ./app
      target: app-production
    ports:
      - 80:80
    depends_on:
      - server-app
      - db-app
    networks: 
      - mynetwork

networks:
  mynetwork:
    driver: bridge

